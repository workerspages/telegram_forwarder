name: Build and Push Docker Image

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      # 步骤1: 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 🆕 调试步骤: 列出所有文件
      - name: Debug - List repository files
        run: |
          echo "=== Repository root files ==="
          ls -la
          echo ""
          echo "=== Source directory structure ==="
          find . -type f -name "*.py" -o -name "Dockerfile" -o -name "*.sh"
          echo ""
          if [ -d "src" ]; then
            echo "=== src/ directory contents ==="
            ls -la src/
          else
            echo "⚠️ WARNING: src/ directory not found!"
          fi

      # 步骤2: 登录到 GitHub Container Registry
      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 步骤3: 登录到 Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 步骤4: 提取 Docker 元数据
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
            ghcr.io/${{ github.repository }}

      # 步骤5: 设置 Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 🆕 调试步骤: 创建临时调试 Dockerfile
      - name: Debug - Create debug Dockerfile
        run: |
          cat > Dockerfile.debug <<'EOF'
          FROM busybox
          COPY . /tmp/build/
          RUN echo "=== Files in build context ===" && \
              find /tmp/build/ -type f && \
              echo "" && \
              echo "=== Looking for telegram_to_email.py ===" && \
              find /tmp/build/ -name "telegram_to_email.py" || echo "❌ telegram_to_email.py NOT FOUND"
          EOF

      # 🆕 调试步骤: 构建调试镜像查看构建上下文
      - name: Debug - Build test image to check context
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.debug
          push: false
          tags: debug-context:latest

      # 步骤6: 构建镜像并推送
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
